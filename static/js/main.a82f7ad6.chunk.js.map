{"version":3,"sources":["components/todo.js","components/todoApp.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","_ref","item","onUpdate","onDelete","_useState","useState","_useState2","Object","slicedToArray","isEdit","setIsEdit","FormEdit","_useState3","title","_useState4","newValue","setNewValue","react_default","a","createElement","className","onSubmit","e","preventDefault","type","onChange","value","target","onClick","id","TodoElement","TodoApp","setTitle","todos","setTodos","handleSubmit","newTodo","crypto","randomUUID","completed","temp","toConsumableArray","unshift","handleUpdate","find","handleDelete","filter","map","key","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a82f7ad6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { useState } from \"react\";\r\n\r\nexport default function Todo({item, onUpdate, onDelete}){\r\n\r\n    const [isEdit, setIsEdit] = useState(false);\r\n\r\n    function FormEdit(){\r\n\r\n        const [newValue, setNewValue] = useState(item.title);\r\n        function handleSubmit(e){\r\n            e.preventDefault();\r\n        }\r\n\r\n        function handleChange(e){\r\n            const value = e.target.value;\r\n            setNewValue(value);\r\n        }\r\n\r\n        function handleClickUpdateTodo(){\r\n            onUpdate(item.id, newValue)\r\n            setIsEdit(false);\r\n        }\r\n\r\n        return( \r\n        <form className=\"todoUpdateForm\" onSubmit={handleSubmit}>\r\n            <input type=\"text\" className=\"todoInput\" onChange={handleChange} value={newValue} />\r\n            <button className=\"button\" onClick={handleClickUpdateTodo} >Update</button>\r\n        </form>\r\n        );\r\n    }\r\n\r\n    function TodoElement(){\r\n        return <div className=\"todoInfo\"><span className=\"todoTitle\">{item.title}</span>{item.title} <button className=\"button\" onClick={() => setIsEdit(true)}>Edit</button><button className=\"buttonDelete\" onClick={(e)=>onDelete(item.id)}>Delete</button>\r\n        </div>\r\n    }\r\n    return(\r\n        <div className=\"todo\">\r\n            {isEdit ? <FormEdit /> : <TodoElement />}\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { useState } from \"react\"\r\nimport Todo from \"./todo\";\r\n\r\nimport \"./todoApp.css\";\r\n\r\nexport default function TodoApp(){\r\n    \r\n    const [title, setTitle] = useState(\"jeje\");\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    function handleChange(e){\r\n        const value = e.target.value;\r\n\r\n        setTitle(value);\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const newTodo = {\r\n            id: crypto.randomUUID(),\r\n            title: title,\r\n            completed: false,\r\n        };\r\n\r\n        const temp = [...todos];\r\n        temp.unshift(newTodo);\r\n\r\n        setTodos(temp);\r\n\r\n        setTitle(\"\");\r\n    }\r\n\r\n    function handleUpdate(id, value){\r\n        const temp = [...todos];\r\n        const item = temp.find((item) => item.id === id);\r\n        item.title = value;\r\n        setTodos(temp);\r\n    }\r\n\r\n    function handleDelete(id){\r\n        const temp = todos.filter(item => item.id !== id);\r\n        \r\n        setTodos(temp);\r\n    }\r\n\r\n    return <div className=\"todoContainer\">\r\n        <form className=\"todoCreateForm\" onSubmit={handleSubmit}>\r\n            <input onChange={handleChange} className=\"todoInput\" value={title}></input>\r\n            <input onClick={handleSubmit} type=\"submit\" value=\"Create todo\" className=\"buttonCreate\" />\r\n        </form>\r\n\r\n        <div className=\"todosContainer\">\r\n            {\r\n                todos.map(item => (\r\n                    <Todo key={item.id} item={item} onUpdate={handleUpdate} onDelete={handleDelete}/>\r\n                ))\r\n            }\r\n        </div>\r\n    </div>\r\n}","import React, { Component } from 'react';\nimport TodoApp from \"./components/todoApp\";\n\nfunction App() {\n  return <TodoApp/>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}